<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Litdex.Security.RNG.TRNG</name>
    </assembly>
    <members>
        <member name="T:Litdex.Security.RNG.TRNG.ANU">
            <summary>
            	Australian National University Quantum Random Number Generator. 
            	All number generated by measuring the quantum fluctuations of the vacuum.
            </summary>
            <remarks>
            	Website: https://qrng.anu.edu.au/
            </remarks>
        </member>
        <member name="M:Litdex.Security.RNG.TRNG.ANU.#ctor(System.UInt16)">
            <summary>
            	TRNG from https://qrng.anu.edu.au/
            </summary>
            <param name="entropySize">
            	The size of internal state for RNG in <see cref="T:System.Byte"/>.
            </param>
        </member>
        <member name="M:Litdex.Security.RNG.TRNG.ANU.#ctor(System.Net.Http.HttpClient)">
            <summary>
            	TRNG from https://qrng.anu.edu.au/
            </summary>
            <param name="client">
            	Client for sending and receive http response.
            </param>
        </member>
        <member name="M:Litdex.Security.RNG.TRNG.ANU.Next(System.UInt16,System.UInt16)">
            <summary>
            	Download data from server.
            </summary>
            <param name="length">
            	How many block to retrieve.
            </param>
            <param name="blockSize">
            	Block size of the hex string.
            </param>
        </member>
        <member name="M:Litdex.Security.RNG.TRNG.ANU.AlgorithmName">
            <inheritdoc/>
        </member>
        <member name="M:Litdex.Security.RNG.TRNG.ANU.Reseed">
            <inheritdoc/>
        </member>
        <member name="T:Litdex.Security.RNG.TRNG.Ligos">
            <summary>
            	TRNG from https://makemeapassword.ligos.net based on Terninger.
            </summary>
        </member>
        <member name="M:Litdex.Security.RNG.TRNG.Ligos.#ctor(System.UInt16)">
            <summary>
            	TRNG from https://makemeapassword.ligos.net.
            </summary>
            <param name="entropySize">
            	The size of internal state for RNG in <see cref="T:System.Byte"/>.
            </param>
        </member>
        <member name="M:Litdex.Security.RNG.TRNG.Ligos.#ctor(System.Net.Http.HttpClient)">
            <summary>
            	TRNG from https://makemeapassword.ligos.net.
            </summary>
            <param name="client">
            	Client for sending and receive http response.
            </param>
        </member>
        <member name="M:Litdex.Security.RNG.TRNG.Ligos.AlgorithmName">
            <inheritdoc/>
        </member>
        <member name="M:Litdex.Security.RNG.TRNG.Ligos.Reseed">
            <inheritdoc/>
        </member>
        <member name="T:Litdex.Security.RNG.TrueRandom">
            <summary>
            	Base class for True Random Generator.
            </summary>
        </member>
        <member name="M:Litdex.Security.RNG.TrueRandom.DecodeBase16(System.String)">
            <summary>
            	Decode hexadecimal string to array of <see cref="T:System.Byte"/>.
            </summary>
            <param name="hexString">
            	Hexadecimal string to decode.
            </param>
            <returns>
            	Array of <see cref="T:System.Byte"/> of decoded <paramref name="hexString"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="hexString"/> is null, empty or containing white spaces.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="hexString"/> length is odd.
            </exception>
        </member>
        <member name="M:Litdex.Security.RNG.TrueRandom.AddHttpUserAgent(System.String)">
            <summary>
            	Add http user agent if not exist.
            </summary>
            <remarks>
            	by default using browser user agent.
            </remarks>
            <param name="userAgent">
            	User Agent value.
            </param>
        </member>
        <member name="M:Litdex.Security.RNG.TrueRandom.GetJsonResponseAsync``1(System.String)">
            <summary>
            	Get JSON response from url.
            </summary>
            <typeparam name="T">
            	The type of the object to deserialize.
            </typeparam>
            <param name="url">
            	URL of the request. 
            </param>
            <returns>
            	The instance of <typeparamref name="T"/> being deserialized.
            </returns>
            <exception cref="T:System.Exception">
            	Unexpected error occured.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            	The request failed due to an underlying issue such as network connectivity, DNS
                failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            	The request failed due timeout.
            </exception>
            <exception cref="T:System.Text.Json.JsonException">
            	The JSON is invalid.
            </exception>
        </member>
        <member name="M:Litdex.Security.RNG.TrueRandom.GetStringResponseAsync(System.String)">
            <summary>
            	Get <see cref="T:System.String"/> response from url.
            </summary>
            <param name="url">
            	URL of request.
            </param>
            <returns>
            	<see cref="T:System.String"/> response.
            </returns>
            <exception cref="T:System.Exception">
            	Unexpected error occured.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            	The request failed due to an underlying issue such as network connectivity, DNS
                failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            	The request failed due timeout.
            </exception>
        </member>
        <member name="M:Litdex.Security.RNG.TrueRandom.DeserializeStringFromStreamAsync(System.IO.Stream)">
            <summary>
            	Deserializes response into string.
            </summary>
            <param name="stream">
            	Array of <see cref="T:System.Byte"/>s to deserialize.
            </param>
            <returns>
            	<see cref="T:System.String"/> content.
            </returns>
        </member>
        <member name="M:Litdex.Security.RNG.TrueRandom.AlgorithmName">
            <inheritdoc/>
        </member>
        <member name="M:Litdex.Security.RNG.TrueRandom.Reseed">
            <summary>
            	Refill the entropy from the source.
            </summary>
        </member>
        <member name="M:Litdex.Security.RNG.TrueRandom.NextBoolean">
            <inheritdoc/>
        </member>
        <member name="M:Litdex.Security.RNG.TrueRandom.NextByte">
            <inheritdoc/>
        </member>
        <member name="M:Litdex.Security.RNG.TrueRandom.NextBytes(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Litdex.Security.RNG.TrueRandom.Fill(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:Litdex.Security.RNG.TrueRandom.NextInt">
            <inheritdoc/>
        </member>
        <member name="M:Litdex.Security.RNG.TrueRandom.NextLong">
            <inheritdoc/>
        </member>
    </members>
</doc>
